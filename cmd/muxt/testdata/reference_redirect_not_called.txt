# verify redirect block is not generated when template does not call Redirect

muxt generate

exec ls

cat empty_template_routes_gen.go
! grep 'redirectURL != ""' empty_template_routes_gen.go

cat methods_template_routes_gen.go
! grep 'redirectURL != ""' methods_template_routes_gen.go

-- in.go --
package main

func main() {}
-- template.go --
package main

import (
	"embed"
	"html/template"
)

//go:embed *.gohtml
var templatesDir embed.FS

var templates = template.Must(template.ParseFS(templatesDir, "*"))

-- go.mod --
module example.com

go 1.25
-- empty.gohtml --
{{define "GET /"}}Hello, World!{{end}}

-- methods.gohtml --
{{- /* None of these should cause redirectURL to be modified so they should not require the block to be added */ -}}

{{/* Basic safe method calls */}}
{{define "GET /x1"}}{{printf "%T" .Path}}{{end}}
{{define "GET /x2"}}{{printf "%T" .Result}}{{end}}
{{define "GET /x3"}}{{printf "%T" .Request}}{{end}}
{{define "GET /x4"}}{{printf "%T" .Receiver}}{{end}}
{{define "GET /x5"}}{{printf "%T" .Ok}}{{end}}
{{define "GET /x6"}}{{printf "%T" .Err}}{{end}}
{{define "GET /x7"}}{{printf "%T" .MuxtVersion}}{{end}}

{{/* Methods that return *TemplateData but don't set redirectURL */}}
{{define "GET /x10"}}{{printf "%T" (.StatusCode 201)}}{{end}}
{{define "GET /x11"}}{{printf "%T" (.Header "X-Peach" "peach")}}{{end}}

{{/* Chaining off safe methods (accessing fields/methods on returned types) */}}
{{define "GET /x20"}}{{.Request.URL}}{{end}}
{{define "GET /x21"}}{{.Request.Method}}{{end}}
{{define "GET /x22"}}{{.Request.URL.Path}}{{end}}
{{define "GET /x23"}}{{.Request.URL.Query.Get "key"}}{{end}}
{{define "GET /x24"}}{{.Request.Header.Get "Content-Type"}}{{end}}

{{/* Chaining StatusCode and Header (these return *TemplateData but safe to chain) */}}
{{define "GET /x30"}}{{(.StatusCode 200).Header "X-Custom" "value"}}{{end}}
{{define "GET /x31"}}{{(.Header "X-Foo" "bar").StatusCode 201}}{{end}}
{{define "GET /x32"}}{{(.StatusCode 204).Header "X-A" "1" | printf "%T"}}{{end}}

{{/* Using safe methods in conditionals */}}
{{define "GET /x40"}}{{if .Ok}}Success{{else}}Failure{{end}}{{end}}
{{define "GET /x41"}}{{if .Err}}Error: {{.Err}}{{end}}{{end}}
{{define "GET /x42"}}{{if .Result}}Result: {{.Result}}{{end}}{{end}}

{{/* Using safe methods in range */}}
{{define "GET /x50"}}{{range .Path}}{{.}}{{end}}{{end}}

{{/* Passing safe method results to functions */}}
{{define "GET /x60"}}{{.Request | printf "%T"}}{{end}}
{{define "GET /x61"}}{{.Result | printf "%v"}}{{end}}
{{define "GET /x62"}}{{.Ok | printf "%t"}}{{end}}
{{define "GET /x63"}}{{.MuxtVersion | printf "v%s"}}{{end}}

{{/* Multiple safe method calls in same template */}}
{{define "GET /x70"}}{{.Ok}} {{.Err}} {{.Result}}{{end}}
{{define "GET /x71"}}{{.Request.Method}} {{.Request.URL.Path}}{{end}}
{{define "GET /x72"}}{{(.StatusCode 200).Header "X-A" "1"}} OK{{end}}
